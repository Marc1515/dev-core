{
  "data": {
    "title": "Control Structures",
    "description": "Control structures are fundamental in any programming language, including JavaScript, as they guide the execution flow of the code based on certain conditions or by repeating actions in a controlled manner. Here I explain their main function and importance in general terms:",
    "main_function": {
      "title": "Main Function",
      "description": "The primary function of control structures is to make decisions and manage the program flow based on logical conditions or iterations. They allow the program to react differently according to the input data or the state of the application, and execute blocks of code repeatedly without needing to duplicate the code."
    },
    "importance": {
      "title": "Importance",
      "items": [
        {
          "title": "Dynamic Decisions",
          "description": "Without control structures, a program would always execute the same sequence of instructions from start to finish. Control structures enable decision-making at runtime, adapting the behavior of the program to different situations and input data."
        },
        {
          "title": "Efficiency",
          "description": "They handle repetitive tasks without the need to write the same code many times, which simplifies development and reduces the likelihood of errors. For example, a loop can process the elements of a data list, applying the same operations to each element, which would be impractical to code manually if the list is large."
        },
        {
          "title": "Flow Control",
          "description": "They are essential for tasks such as data validation, where the program must decide what action to take depending on whether the information meets certain criteria. They are also crucial in creating user menus and processing user responses."
        }
      ]
    },
    "structures": {
      "title": "Types of Structures",
      "description": "lorem kaernuflakjwnwwfkaewnflkjaewnfkjanwelfanwelkfjnalkwefnaklwejnfkajwenfkajl njkae nkja nfjk aen kfnak.enjklenfw kan kajnk",
      "items": [
        {
          "title": "Sequential Structures",
          "description": "Sequential structures are the foundation of any program, where instructions are executed one after the other, in the order they appear in the script. There is no decision-making or repetition implicit in sequential structures."
        },
        {
          "title": "Conditional Structures",
          "description": "Conditional structures allow you to execute different sections of code depending on whether one or more conditions are true or false. Here are the main ones:",
          "items": [
            {
              "title": "if",
              "description": "The simplest of the conditional structures. Executes a block of code only if the specified condition is true."
            },
            {
              "title": "if else",
              "description": "Extends the (if) by allowing an alternative block of code to execute if the condition is false."
            },
            {
              "title": "if else if else",
              "description": "A chain of if and else to test multiple conditions sequentially."
            },
            {
              "title": "switch",
              "description": "Useful when you have multiple conditions that depend on the same value. It's clearer than using multiple (if-else) when comparing the same variable against different values."
            }
          ]
        },
        {
          "title": "Repetition Structures (Loops)",
          "description": "Loops allow repeating a block of code multiple times. The main repetition structures in JavaScript are:",
          "items": [
            {
              "title": "for",
              "description": "Ideal when you know how many times the loop should execute."
            },
            {
              "title": "for in",
              "description": "Especially useful for iterating over the properties of an object."
            },
            {
              "title": "for of",
              "description": "Used to iterate over elements of iterable structures like Arrays, Strings, Maps, NodeLists, etc."
            },
            {
              "title": "while",
              "description": "Useful when you want to repeat a block of code as long as a condition is true, but you don't know how many times you'll need to repeat it."
            },
            {
              "title": "do while",
              "description": "Similar to while, but it ensures that the code block is executed at least once."
            }
          ]
        }
      ]
    }
  }
}
