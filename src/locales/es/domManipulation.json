{
  "dom_manipulation_explanation": "Profundizar en la selección de elementos del DOM es fundamental para manipular tu página web de manera efectiva. Aquí te mostramos cómo puedes utilizar diferentes métodos para seleccionar elementos en el DOM:",
  "domm_key_concepts_title": "Conceptos Clave del DOM",
  "domm_select_dom_elements_title": "Seleccionar Elementos del DOM",
  "domm_getElementById_explanation": "Selecciona un elemento por su atributo 'id'.",
  "domm_getElementsByTagName_explanation": "Selecciona todos los elementos de un tipo de 'tag' HTML específico.",
  "domm_getElementsByClassName_explanation": "Selecciona todos los elementos que tienen una 'clase' específica.",
  "domm_querySelector_explanation": "Selecciona el primer elemento que coincide con un selector CSS especificado.",
  "domm_querySelectorAll_explanation": "Selecciona todos los elementos que coinciden con un selector CSS especificado.",
  "domm_basic_operations_in_the_dom_title": "Operaciones Básicas en el DOM",
  "domm_element_content_modification_title": "Modificación del Contenido de Elementos",
  "domm_ecm_textContent_explanation": "Esta propiedad te permite leer o modificar el texto interno de un elemento HTML. Al usar 'textContent', cualquier etiqueta HTML dentro del contenido se trata como texto plano y no se interpreta como HTML.",
  "domm_ecm_innerHTML_explanation": "A diferencia de 'textContent', la propiedad 'innerHTML' te permite leer o modificar tanto el texto como el HTML dentro de un elemento. Es muy útil para insertar nuevas estructuras HTML dentro de un elemento, pero debe usarse con precaución debido a riesgos de seguridad como ataques de Cross-Site Scripting (XSS) si el contenido es proporcionado por el usuario.",
  "domm_style_change_title": "Cambio de Estilo",
  "domm_sc_accessing_styles_title": "Acceso a Estilos",
  "domm_sc_accessing_styles_explanation": "Acceder a estilos: JavaScript te permite modificar los estilos CSS de los elementos en el DOM a través de la propiedad 'style' de un elemento. Por ejemplo, element.style.backgroundColor = 'blue'; cambia el color de fondo del elemento a azul.",
  "domm_sc_manipulating_classes_title": "Manipulación de Clases",
  "domm_sc_manipulating_classes_explanation": "Manipulación de clases: A veces, en lugar de cambiar directamente el estilo de un elemento, es más práctico agregar, quitar o alternar clases CSS. Las funciones 'classList.add()', 'classList.remove()', y 'classList.toggle()' son herramientas útiles para este propósito.",
  "domm_add_or_remove_elements_title": "Agregar o Quitar Elementos",
  "domm_are_creating_elements_title": "Creación de Elementos",
  "domm_are_creating_elements_explanation": "Creación de elementos: Puedes crear nuevos nodos en el DOM usando el método 'document.createElement()', que crea un nuevo elemento HTML que puedes configurar (como agregar texto o estilos) antes de insertarlo en el documento.",
  "domm_are_inserting_elements_title": "Inserción de Elementos",
  "domm_are_inserting_elements_explanation": "Inserción de elementos: Una vez que se ha creado un elemento, puedes insertarlo en el DOM usando métodos como 'appendChild()' o 'insertBefore()'. Estos métodos te permiten especificar dónde debe colocarse el nuevo elemento en relación con otros nodos existentes.",
  "domm_are_removing_elements_title": "Eliminación de Elementos",
  "domm_are_removing_elements_explanation": "Eliminación de elementos: Para quitar un elemento, puedes usar el método 'removeChild()' del nodo padre del elemento que deseas eliminar, o usar el método 'remove()' directamente en el elemento que deseas quitar.",
  "domm_events_handle_title": "Manejo de Eventos",
  "domm_eh_adding_events_title": "Agregando Eventos",
  "domm_eh_adding_events_explanation": "Agregar eventos: Los eventos son fundamentales para interactuar con la página web. El método 'addEventListener()' se usa para asignar un evento a un elemento. Por ejemplo, puedes escuchar eventos de clic, eventos de carga de la página, cambios de entrada, etc.",
  "domm_eh_event_handler_functions_title": "Funciones de Manejo de Eventos",
  "domm_eh_event_handler_functions_explanation": "Cuando se dispara un evento, la función asociada (o 'manejador de eventos') se ejecuta. Esta función puede realizar cualquier cantidad de acciones, como validar un formulario, abrir un modal, etc.",
  "domm_eh_event_propagation_title": "Propagación de Eventos",
  "domm_eh_event_propagation_explanation": "Propagación de eventos: Los eventos en el DOM se propagan en dos fases: captura y burbuja. Puedes controlar este comportamiento con el tercer argumento de addEventListener(), estableciendo true para captura o false para burbuja.",
  "domm_dom_navigation_title": "Navegación en el DOM",
  "domm_dn_parent_child_siviling_nodes_title": "Nodos Padre, Hijo y Hermanos",
  "domm_dn_parent_child_siviling_nodes_explanation": "Nodos padre, hijo y hermanos: El DOM está estructurado como un árbol de nodos. Puedes navegar este árbol usando propiedades como 'parentNode', 'childNodes' y 'nextSibling'.",
  "domm_dn_searching_the_dom_three_title": "Búsqueda en el Árbol del DOM",
  "domm_dn_searching_the_dom_three_explanation": "Búsqueda en el árbol del DOM: Métodos como 'getElementsByTagName()', 'getElementsByClassName()', y 'querySelector()' te permiten buscar elementos en el DOM basándote en diferentes criterios, facilitando la manipulación de elementos específicos."
}
