{
  "conditional_structures_explanation": "Las estructuras condicionales permiten ejecutar diferentes secciones de código dependiendo de si una o más condiciones son verdaderas o falsas. Aquí están los principales:",
  "conditional_structures_title": "Estructuras Condicionales",
  "control_structures_description": "Las estructuras de control son fundamentales en cualquier lenguaje de programación, incluido JavaScript, ya que guían el flujo de ejecución del código en función de determinadas condiciones o repitiendo acciones de forma controlada. Aquí te explico su principal función e importancia en términos generales:",
  "control_structures_importance_explanation_dd": "Decisiones dinámicas: sin estructuras de control, un programa siempre ejecutaría la misma secuencia de instrucciones de principio a fin. Las estructuras de control permiten la toma de decisiones en tiempo de ejecución, adaptando el comportamiento del programa a diferentes situaciones y datos de entrada.",
  "control_structures_importance_explanation_e": "Eficiencia: Manejan tareas repetitivas sin necesidad de escribir el mismo código muchas veces, lo que simplifica el desarrollo y reduce la probabilidad de errores. Por ejemplo, un bucle puede procesar los elementos de una lista de datos, aplicando las mismas operaciones a cada elemento, lo que no sería práctico codificar manualmente si la lista es grande.",
  "control_structures_importance_explanation_fc": "Control de Flujo: Son fundamentales para tareas como la validación de datos, donde el programa debe decidir qué acción tomar dependiendo de si la información cumple con ciertos criterios. También son cruciales para crear menús de usuario y procesar las respuestas de los usuarios.",
  "control_structures_importance_title": "Importancia en la Programación",
  "control_structures_main_function_explanation": "La función principal de las estructuras de control es tomar decisiones y gestionar el flujo del programa en función de condiciones lógicas o iteraciones. Permiten que el programa reaccione de manera diferente según los datos de entrada o el estado de la aplicación y ejecute bloques de código repetidamente sin necesidad de duplicar el código.",
  "control_structures_main_function_title": "Función Principal de las Estructuras de Control",
  "for_explanation": "Ideal cuando sabes cuántas veces debe ejecutarse el bucle.",
  "if_else_explanation": "Extiende el (si) permitiendo que se ejecute un bloque de código alternativo si la condición es falsa.",
  "if_else_if_else_explanation": "Una cadena de if y else para probar múltiples condiciones secuencialmente.",
  "if_explanation": "La más simple de las estructuras condicionales. Ejecuta un bloque de código solo si la condición especificada es verdadera.",
  "repetition_structures_explanation": "Los bucles permiten repetir un bloque de código varias veces. Las principales estructuras de repetición en JavaScript son:",
  "repetition_structures_title": "Estructuras de Repetición (Bucles)",
  "sequential_structures_explanation": "Las estructuras secuenciales son la base de cualquier programa, donde las instrucciones se ejecutan una tras otra, en el orden en que aparecen en el script. No hay toma de decisiones ni repetición implícita en las estructuras secuenciales.",
  "sequential_structures_title": "Estructuras Secuenciales",
  "switch_explanation": "Útil cuando tienes múltiples condiciones que dependen del mismo valor. Es más claro que usar múltiples (if-else) al comparar la misma variable con diferentes valores.",
  "loops_explanation": "Los bucles permiten repetir un bloque de código varias veces. Las principales estructuras de repetición en JavaScript son:",
  "while_explanation": "Útil cuando quieres repetir un bloque de código mientras una condición sea verdadera, pero no sabes cuántas veces tendrás que repetirlo.",
  "do_while_explanation": "Similar a while, pero garantiza que el bloque de código se ejecute al menos una vez.",
  "for_in_explanation": "Especialmente útil para iterar sobre las propiedades de un objeto.",
  "for_of_explanation": "Se utiliza para iterar sobre elementos de estructuras iterables como Arrays, Strings, Maps, NodeLists, etc."
}
