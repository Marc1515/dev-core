{
  "data": {
    "title": "Tipos de Datos",
    "description": "Los tipos de datos en JavaScript son fundamentales para determinar cómo se pueden almacenar y manipular los datos dentro de un programa. Proporcionan una estructura que ayuda al lenguaje de programación a entender qué operaciones son posibles con esos datos y cómo deben manejarse. Al definir tipos de datos como números, cadenas o booleanos, JavaScript puede optimizar el uso de la memoria y la ejecución de operaciones, asegurando que las interacciones con los datos sean predecibles y eficientes.",
    "types": [
      {
        "title": "Tipos Primitivos",
        "description": "Estos son los tipos básicos de datos:",
        "items": [
          {
            "title": "String",
            "description": "Una secuencia de caracteres utilizada para representar texto. Por ejemplo, 'Hola, Mundo!'."
          },
          {
            "title": "Number",
            "description": "Representa tanto números enteros como de punto flotante. Por ejemplo, 42 o 3.14. JavaScript utiliza el formato de punto flotante de doble precisión para los números."
          },
          {
            "title": "BigInt",
            "description": "Un entero con precisión arbitraria. Útil para números muy grandes. Por ejemplo, 9007199254740991n."
          },
          {
            "title": "Boolean",
            "description": "Representa una entidad lógica y puede tener dos valores: true y false."
          },
          {
            "title": "Undefined",
            "description": "Una variable que no ha sido asignada a un valor tiene el valor undefined."
          },
          {
            "title": "Null",
            "description": "Denota un valor nulo. Se utiliza para representar un objeto o dirección inexistente o inválido."
          },
          {
            "title": "Symbol",
            "description": "Un primitivo único e inmutable introducido en ES6, utilizado como la clave de una propiedad de un objeto."
          }
        ]
      },
      {
        "title": "Tipos de Objetos",
        "description": "JavaScript te permite crear objetos, que son colecciones de propiedades:",
        "items": [
          {
            "title": "Object",
            "description": "La estructura más básica para almacenar datos en un formato de clave-valor. Por ejemplo, { name: 'Juan', age: 30 }."
          },
          {
            "title": "Array",
            "description": "Un tipo especial de objeto utilizado para almacenar colecciones ordenadas. Por ejemplo, ['manzana', 'banana', 'cereza']."
          },
          {
            "title": "Function",
            "description": "Un bloque de código diseñado para realizar una tarea en particular. Las funciones también son objetos."
          }
        ]
      }
    ],
    "conclusion": "Entender los tipos de datos es crucial para escribir código en JavaScript eficiente y sin errores. Forman la columna vertebral de cualquier programa, determinando cómo se almacenan, manipulan e interactúan los datos a lo largo de la ejecución de la aplicación."
  }
}
